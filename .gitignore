## Игнорировать временные файлы Visual Studio, результаты сборки и
## файлы, созданные популярными дополнениями Visual Studio.
##
## Получить последнюю версию из https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# Пользовательские файлы
*.rsuser
*.suo
*.пользователь
*.userosscache
*   .sln.docstates

# Пользовательские файлы (MonoDevelop / Xamarin Studio)
*.пользовательские настройки

# Автоматически генерируемые файлы Mono
моно_краш.*

# Результаты сборки
[Dd]ebug/
[Dd]ebugPublic/
[Rr]элиз/
[Rr]элеазы/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr] [Мм]/
[Aa][Rr] [Мм]64/
блд/
[Bb] в/
[Оо]би джей/
[Ll]ог/
[Ll] ogs/

# Visual Studio 2015/2017 каталог кэша / параметров
.против/
# Раскомментируйте, если у вас есть задачи, которые создают статические файлы проекта в wwwroot
#wwwroot/

# Автоматически создаваемые файлы Visual Studio 2017
Файлы\ Сгенерированные/

# MSTest Результаты тестирования
[Tt] есть [Rr] результат */
[Bb] уилд[Лл] о. г.*

# НУнит
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Результаты сборки проекта ATL
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Результаты тестов
Бенчмаркдотнет.Артефакты/

# .NET Core
project.lock.json проект.блокировка.json
project.fragment.lock.json
артефакты/

# ASP.NET Строительные леса
ScaffoldingReadMe.txt

# Стильная одежда
StyleCopReport.xml

# Файлы, созданные Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.мета
*.obj
* .iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
* .rsp
* .sbr
* .tlb
*.tli
* .tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.журнал регистрации
*.tlog
* .vspscc
* .vssscc
.сборки
*.pidb
*.svclog
*  .scc

# Тестовые файлы Chutzpah
_чуцпа *

# Файлы кэша Visual C++
ipch/
*.точки доступа
*.ncb
*.opendb
* .opensdf
*.sdf
*.кэш-файл
*  .VC.db
*  .VC.VC.opendb

# Профилировщик Visual Studio
*.psess
*.всп
* .vspx
*  .sap

# Файлы трассировки Visual Studio
*.e2e

# Локальное рабочее пространство TFS 2012
$ tf/

# Инструментарий автоматизации руководства
*.gpState

# ReSharper - это надстройка для кодирования .NET
резкийБолее _ */
*.[Rr]e[Ss] харпер
*.Настройки точек.пользователь

# TeamCity - это надстройка для сборки
_TeamCity *

# dotCover - это инструмент для покрытия кода
* .dotCover

# AxoCover - это инструмент для покрытия кода
.Обложка axoCover/*
.axoCover!/настройки.json

# Coverlet - это бесплатный кроссплатформенный инструмент для покрытия кода
покрытие * .json
охват * .xml
охват *.info

# Результаты покрытия кода Visual Studio
*.охват
*.coveragexml

# NCrunch
_нкранч_*
.* хруст *.local.xml
nCrunchTemp_*

# Могучий выбор
* .мм.*
AutoTest.Net/

# Веб-верстак (sass)
.sass-кэш/

# Выходная папка Installshield
[Ee]xpress/

# DocProject - это надстройка генератора документации
DocProject/buildhelp/
DocProject/Справка/*.HxT
DocProject/Справка/*.HxC
DocProject/Справка/*.hhc
DocProject/Справка/*.hhk
DocProject/Справка/*.hhp
DocProject/Справка/Html2
DocProject/Справка/html

# Каталог с одним щелчком мыши
опубликовать/

# Опубликовать веб-вывод
*.[Пп]ublish.xml
*.azurePubxml
# Примечание: прокомментируйте следующую строку, если вы хотите проверить настройки веб-развертывания,
# но строки подключения к базе данных (с потенциальными паролями) будут незашифрованными
*.pubxml
*.опубликовать проект

# Параметры публикации веб-приложения Microsoft Azure. Прокомментируйте следующую строку, если хотите
# проверка параметров публикации веб-приложения Azure, но конфиденциальная информация, содержащаяся
# в этих скриптах будут незашифрованы
Публиковать скрипты/

# Пакеты NuGet
*.nupkg
# Пакеты символов NuGet
*.snupkg
# Папка packages может быть проигнорирована из-за восстановления пакета
**/[Pp]учетные записи/*
# за исключением build/, который используется в качестве целевого объекта MSBuild.
**!/[Pp]учетные записи/сборка/
# Раскомментируйте, если необходимо, однако, как правило, он будет восстановлен при необходимости
#!**/[Pp]учетные записи/репозитории.config
Файлы project.json # NuGet v3 создают больше игнорируемых файлов
*.nuget.реквизит
*.nuget.цели

# Выходные данные сборки Microsoft Azure
csx/
*.build.csdef *.build.csdef

# Эмулятор Microsoft Azure
ecf/
rcf/

# Каталоги и файлы пакетов приложений Windows Store
приложений Пакеты/
статей Пакет/
Посылка.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload загрузить

# Файлы кэша Visual Studio
# файлы, заканчивающиеся на .cache, могут быть проигнорированы
.* [Cc] боль
# но следите за каталогами, заканчивающимися на .cache
!?*.[Cc]болит/

# Другие
Клиентская база/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*   .jfm
*.пфх
*.опубликовать настройки
орлеан.codegen.cs

# Включение файлов со строгими именами может представлять угрозу безопасности
# (https://github.com/github/gitignore/pull/2483#issue-259490424 )
#*.snk

# Поскольку существует несколько рабочих процессов, раскомментируйте следующую строку, чтобы игнорировать bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622 )
#bower_компоненты/

# RIA/Проекты Silverlight
Сгенерированный код/

# Резервное копирование и создание отчетов о файлах в результате преобразования старого файла проекта
# в более новую версию Visual Studio. Резервные копии файлов не нужны,
# потому что у нас есть git ;-)
_преобразование_порт_файлы/
* Резервное копирование/
Список обновлений *.XML
Список обновлений*.htm
Резервное копирование ServiceFabric/
*  .rptproj.bak

# Файлы SQL Server
*.mdf
*.ldf
*  .ndf

# Проекты бизнес-аналитики
*.rdl.data
*.bim.layout
*.bim_*.настройки
* .rptproj.rsuser
-* [Bb]ackup.rdl
-* [Bb] ackup ([0-9]).rdl
- * [Bb] ackup ([0-9][0-9]).rdl

# Подделки Microsoft
Поддельные сборки/

# Файл настроек плагина GhostDoc
*.GhostDoc.xml

# Node.js Инструменты для Visual Studio
.анализ ntvs_.дата
node_modules узловые модули/

# Журнал сборки Visual Studio 6
*.plg

# Файл параметров рабочей области Visual Studio 6
*.opt

# Автоматически сгенерированный файл рабочей области Visual Studio 6 (содержит, какие файлы были открыты и т.д.)
*.vbw

# Автоматически сгенерированный файл проекта Visual Studio 6 (содержит, какие файлы были открыты и т.д.)
*  .vbp

# Рабочая область Visual Studio 6 и файл проекта (рабочие файлы проекта, содержащие файлы для включения в проект)
*  .dsw
*  .dsp

# Технические файлы Visual Studio 6
*.ncb
*.точки доступа

# Выходные данные сборки Visual Studio LightSwitch
**/*.HTMLClient/Созданные статьи
**/*.DesktopClient/Созданные статьи
**/*.DesktopClient/ModelManifest.xml
**/*.Server/Созданные статьи
**/*.Server/ModelManifest.xml
_Pvt_Расширения

# Менеджер зависимостей пакетов
.paket/paket.exe
пакет-файлы/

# ПОДДЕЛКА - F# Сделать
.подделка/

# Личные настройки CodeRush
.кредитный/личный

# Инструменты Python для Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - раскомментируйте, если вы его используете
# инструменты/**
# !инструменты / пакеты.config

# Студия вкладок
*  .tss

# Конфигурационный файл JustMock от Telerik
*.jmconfig

# Вывод сборки BizTalk
*.btp.cs
*.btm.cs
* .odx.cs
*.xsd.cs

# Результаты анализа пользовательского интерфейса OpenCover
Открыть обложку/

# Вывод локального запуска Azure Stream Analytics
ASALocalRun/

# Двоичный и структурированный журнал MSBuild
*.binlog

# Файл конфигурации отладчика графического процессора NVidia Nsight
*  .nvuser

Рабочая папка # MFractors (инструмент повышения производительности Xamarin)
.mfractor/

# Локальная история для Visual Studio
.локальная история/

# История файлов Visual Studio (VSHistory)
.вшистория/

# Проверка работоспособности временной базы данных BeatPulse
healthchecksdb

# Папка резервного копирования для инструмента преобразования ссылок на пакеты в Visual Studio 2017
Резервное копирование миграции/

# Ionide (кроссплатформенный F # VS Code tools) рабочая папка
.ионид/

# Fody - автоматически сгенерированная XML-схема
FodyWeavers.xsd

# Файлы VS Code для тех, кто работает с несколькими инструментами
.vscode/*
.vscode!/настройки.json
.vscode!/задачи.json
.vscode!/запустить.json
.vscode!/extensions.json
*.код-рабочее пространство

# Локальная история для кода Visual Studio
.история/

# Файлы установщика Windows из выходных данных сборки
*.cab
*  .msi
*.msix
*.мсм
*  .msp

# Гонщик JetBrains
* .sln.iml